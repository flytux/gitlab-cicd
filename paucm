apiVersion: v1
data:
  context.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <Context allowCasualMultipartParsing="true">
        <WatchedResource>WEB-INF/web.xml</WatchedResource>
        <WatchedResource>WEB-INF/tomcat-web.xml</WatchedResource>
        <WatchedResource>WEB-INF/websquare_home/config/websquare.xml</WatchedResource>
        <Resources cachingAllowed="true" cacheMaxSize="100000" />
        <CookieProcessor sameSiteCookies="none"/>
    </Context>
kind: ConfigMap
metadata:
  name: lecapply-context-xml
  namespace: op-pnu
---
apiVersion: v1
data:
  server.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    -->
    <!-- Note:  A "Server" is not itself a "Container", so you may not
      define subcomponents such as "Valves" at this level.
      Documentation at /docs/config/server.html
    -->
    <Server port="8005" shutdown="SHUTDOWN">
    <Listener className="org.apache.catalina.startup.VersionLoggerListener" />
    <!-- Security listener. Documentation at /docs/config/listeners.html
    <Listener className="org.apache.catalina.security.SecurityListener" />
    -->
    <!--APR library loader. Documentation at /docs/apr.html -->
    <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
    <!-- Prevent memory leaks due to use of particular java/javax APIs-->
    <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
    <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
    <Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

    <!-- Global JNDI resources
        Documentation at /docs/jndi-resources-howto.html
    -->
    <GlobalNamingResources>
      <!-- Editable user database that can also be used by
          UserDatabaseRealm to authenticate users
      -->
      <Resource name="UserDatabase" auth="Container"
                type="org.apache.catalina.UserDatabase"
                description="User database that can be updated and saved"
                factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
                pathname="conf/tomcat-users.xml" />
    </GlobalNamingResources>

    <!-- A "Service" is a collection of one or more "Connectors" that share
        a single "Container" Note:  A "Service" is not itself a "Container",
        so you may not define subcomponents such as "Valves" at this level.
        Documentation at /docs/config/service.html
    -->
    <Service name="Catalina">

      <!--The connectors can use a shared executor, you can define one or more named thread pools-->
      <!--
      <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
          maxThreads="${env.MAX_THREADS:200}" minSpareThreads="${env.MIN_THREADS:4}"/>
      -->


      <!-- A "Connector" represents an endpoint by which requests are received
          and responses are returned. Documentation at :
          Java HTTP Connector: /docs/config/http.html
          Java AJP  Connector: /docs/config/ajp.html
          APR (HTTP/AJP) Connector: /docs/apr.html
          Define a non-SSL/TLS HTTP/1.1 Connector on port 8080
      -->
      <Connector port="8080" protocol="${tomcat.connector}"
                connectionTimeout="20000"
                maxPostSize="-1"
                maxConnection="32768"
                maxThread="500"
                redirectPort="8443"
                enableLookups="false"
                compression="off"
                maxKeepAliveRequest="1" />

      <!-- A "Connector" using the shared thread pool-->
      <!--
      <Connector executor="tomcatThreadPool"
                port="8080" protocol="${tomcat.connector}"
                connectionTimeout="20000"
                redirectPort="8443" />
      -->
      <!-- Define an SSL/TLS HTTP/1.1 Connector on port 8443
          This connector uses the NIO implementation. The default
          SSLImplementation will depend on the presence of the APR/native
          library and the useOpenSSL attribute of the
          AprLifecycleListener.
          Either JSSE or OpenSSL style configuration may be used regardless of
          the SSLImplementation selected. JSSE style configuration is used below.
      -->
      <!--
      <Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
                maxThreads="${env.MAX_THREADS:200}" SSLEnabled="true">
          <SSLHostConfig>
              <Certificate certificateKeystoreFile="conf/localhost-rsa.jks"
                          type="RSA" />
          </SSLHostConfig>
      </Connector>
      -->
      <!-- Define an SSL/TLS HTTP/1.1 Connector on port 8443 with HTTP/2
          This connector uses the APR/native implementation which always uses
          OpenSSL for TLS.
          Either JSSE or OpenSSL style configuration may be used. OpenSSL style
          configuration is used below.
      -->
      <!--
      <Connector port="8443" protocol="org.apache.coyote.http11.Http11AprProtocol"
                maxThreads="${env.MAX_THREADS:200}" SSLEnabled="true" >
          <UpgradeProtocol className="org.apache.coyote.http2.Http2Protocol" />
          <SSLHostConfig>
              <Certificate certificateKeyFile="conf/localhost-rsa-key.pem"
                          certificateFile="conf/localhost-rsa-cert.pem"
                          certificateChainFile="conf/localhost-rsa-chain.pem"
                          type="RSA" />
          </SSLHostConfig>
      </Connector>
      -->

      <!-- Define an AJP 1.3 Connector on port 8009 -->
      <!--
      <Connector protocol="AJP/1.3"
                address="::1"
                port="8009"
                redirectPort="8443" />
      -->

      <!-- An Engine represents the entry point (within Catalina) that processes
          every request.  The Engine implementation for Tomcat stand alone
          analyzes the HTTP headers included with the request, and passes them
          on to the appropriate Host (virtual host).
          Documentation at /docs/config/engine.html -->

      <!-- You should set jvmRoute to support load-balancing via AJP ie :
      <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
      -->
      <Engine name="Catalina" defaultHost="localhost">

        <!--For clustering, please take a look at documentation at:
            /docs/cluster-howto.html  (simple how to)
            /docs/config/cluster.html (reference documentation) -->
        <!--
        <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
        -->
        <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"
                  channelSendOptions="8">
            <Manager className="org.apache.catalina.ha.session.DeltaManager"
                    expireSessionsOnShutdown="false"
                    notifyListenersOnReplication="true"/>
            <Channel className="org.apache.catalina.tribes.group.GroupChannel">
              <Membership className="org.apache.catalina.tribes.membership.McastService"
                          address="228.0.0.4"
                          port="45564"
                          frequency="500"
                          dropTime="3000"/>
              <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
                        address="auto"
                        port="4000"
                        autoBind="100"
                        selectorTimeout="5000"
                        maxThreads="6"/>
              <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
                <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
              </Sender>
              <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
              <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor"/>
            </Channel>
            <Valve className="org.apache.catalina.ha.tcp.ReplicationValve" filter=""/>
            <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>
            <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
        </Cluster>

        <!-- Use the LockOutRealm to prevent attempts to guess user passwords
            via a brute-force attack -->
        <Realm className="org.apache.catalina.realm.LockOutRealm">
          <!-- This Realm uses the UserDatabase configured in the global JNDI
              resources under the key "UserDatabase".  Any edits
              that are performed against this UserDatabase are immediately
              available for use by the Realm.  -->
          <Realm className="org.apache.catalina.realm.UserDatabaseRealm"
                resourceName="UserDatabase"/>
        </Realm>

        <Host name="localhost"  appBase="webapps"
              unpackWARs="true" autoDeploy="true">

          <!-- SingleSignOn valve, share authentication between web applications
              Documentation at: /docs/config/valve.html -->
          <!--
          <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
          -->

          <!-- Access log processes all example.
              Documentation at: /docs/config/valve.html
              Note: The pattern used is equivalent to using pattern="common" -->
          <Valve className="org.apache.catalina.valves.AccessLogValve" directory="${catalina.logdir}"
                prefix="localhost_access_log" suffix=".txt"
                pattern="%{X-Forwarded-For}i %h %l %u %t &quot;%r&quot; %s %b %{User-Agent}i %F " />

          </Host>
        </Engine>
      </Service>
    </Server>
kind: ConfigMap
metadata:
  name: lecapply-server-xml
  namespace: op-pnu
---
apiVersion: v1
data:
  context-datasource.xml: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"
    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"
    xmlns:jee=\"http://www.springframework.org/schema/jee\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd\n    http://www.springframework.org/schema/jdbc
    \ http://www.springframework.org/schema/jdbc/spring-jdbc.xsd\">\n\n<!-- Jasypt
    --> <bean id=\"environmentVariablesConfiguration\" class=\"org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig\">\n
    \ <property name=\"algorithm\" value=\"PBEWITHMD5ANDDES\"/>\n  <property name=\"passwordEnvName\"
    value=\"APP_ENCRYPTION_PASSWORD\"/>\n</bean>  \n<bean id=\"configurationEncryptor\"
    class=\"org.jasypt.encryption.pbe.StandardPBEStringEncryptor\">\n  <property
    name=\"config\" ref=\"environmentVariablesConfiguration\"/>    <property name=\"password\"
    value=\"a12345\"/>\n</bean>    \n<bean id=\"propertyConfig\" class=\"org.jasypt.spring4.properties.EncryptablePropertyPlaceholderConfigurer\">\n
    \ <constructor-arg ref=\"configurationEncryptor\"/>\n  <property name=\"location\"
    value=\"classpath:db.properties\"/>\n</bean>\n\n\n<!-- DataSource server -->\n
    \ <bean id=\"dataSourcePnu\" class=\"org.apache.commons.dbcp2.BasicDataSource\">\n
    \ <property name=\"driverClassName\" value=\"${jdbc.driverClassName}\"/>\n  <property
    name=\"url\" value=\"${jdbc.url}\"/>\n  <property name=\"username\" value=\"${jdbc.username}\"/>
    <property\n    name=\"password\" value=\"${jdbc.password}\"/>\n  <property name=\"initialSize\"
    value=\"1\" />\n  <property name=\"maxTotal\" value=\"1000\" />\n  <property
    name=\"maxIdle\" value=\"2\" />\n  <property name=\"minIdle\" value=\"1\" />\n
    \ <property name=\"maxWaitMillis\" value=\"300000\" />\n  <property name=\"testOnBorrow\"
    value=\"false\"/>\n  <property name=\"testOnReturn\" value=\"false\"/>\n  <property
    name=\"testWhileIdle\" value=\"true\"/>  \n  <property name=\"timeBetweenEvictionRunsMillis\"
    value=\"300000\"/>\n  <property name=\"minEvictableIdleTimeMillis\" value=\"-1\"/>
    \   \n  </bean>\n\n<!-- DataSource server -->\n  <bean id=\"dataSourcePnuSugang\"
    class=\"org.apache.commons.dbcp2.BasicDataSource\">\n  <property name=\"driverClassName\"
    value=\"${jdbc.driverClassName}\"/>\n  <property name=\"url\" value=\"${jdbc.sugang.url}\"/>\n
    \ <property name=\"username\" value=\"${jdbc.sugang.username}\"/> <property\n
    \   name=\"password\" value=\"${jdbc.sugang.password}\"/>\n  <property name=\"initialSize\"
    value=\"1\" />\n  <property name=\"maxTotal\" value=\"1000\" />\n  <property
    name=\"maxIdle\" value=\"2\" />\n  <property name=\"minIdle\" value=\"1\" />\n
    \ <property name=\"maxWaitMillis\" value=\"300000\" />\n  <property name=\"testOnBorrow\"
    value=\"false\"/>\n  <property name=\"testOnReturn\" value=\"false\"/>\n  <property
    name=\"testWhileIdle\" value=\"true\"/>  \n  <property name=\"timeBetweenEvictionRunsMillis\"
    value=\"300000\"/>\n  <property name=\"minEvictableIdleTimeMillis\" value=\"-1\"/>
    \   \n  </bean>\n\n\n \n\n</beans>"
kind: ConfigMap
metadata:
  name: lecapply-context-datasource-xml
  namespace: op-pnu
---
apiVersion: v1
data:
  log4j2.xml: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE log4j:configuration
    PUBLIC \"-//APACHE//DTD LOG4J 1.2//EN\" \"http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd\">\n<Configuration>\n
    \   <properties>\n        <property name=\"log-path\">logs</property>\n    </properties>\n
    \   <Appenders>\n\n        <Console name=\"console\" target=\"SYSTEM_OUT\">\n
    \           <PatternLayout pattern=\"[%highlight{%-5level}] %d{DEFAULT} %c{1}.%M()
    - %msg%n%throwable{short.lineNumber}\" />\n        </Console>\n\n        <!--
    -->\n        <RollingFile name=\"file\" filename=\"${log-path}/op_lecapply_log4j.log\"
    filePattern=\"${log-path}/%d{yyyyMM}/op_lecapply_log4j_%d{yyyyMMdd}.log\"\n
    \           append=\"false\">\n            <PatternLayout pattern=\"%d{yyyy.MM.dd
    hh:mm:ss,SSS} %5p [%c::%M] %m%n\" />\n\n            <Policies>\n                <!--
    interval(default 1)이므로 1초 간격으로 rolling 수행 intervar속성 추가 -->\n                <TimeBasedTriggeringPolicy
    interval=\"1\" />\n                <!-- 사이즈 제한을 하고 싶을 경우 아래 속성 추가 -->\n                <!--
    <SizeBasedTriggeringPolicy size=\"250 MB\"/> -->\n            </Policies>\n
    \       </RollingFile>\n\n    </Appenders>\n\n    <Loggers>\n        <!-- log
    SQL with timing information, post execution -->\n        <Root level=\"ERROR\">\n
    \           <AppenderRef ref=\"console\" />\n            <AppenderRef ref=\"file\"
    />\n        </Root>\n\n        <Logger name=\"egovframework\" level=\"ERROR\"
    additivity=\"false\">\n            <AppenderRef ref=\"console\" />\n            <AppenderRef
    ref=\"file\" />\n        </Logger>\n        <Logger name=\"java.sql\" level=\"ERROR\"
    additivity=\"false\">\n            <AppenderRef ref=\"console\" />\n            <AppenderRef
    ref=\"file\" />\n        </Logger>\n        <Logger name=\"com.pnu\" level=\"ERROR\"
    additivity=\"false\">\n            <AppenderRef ref=\"console\" />\n            <AppenderRef
    ref=\"file\" />\n        </Logger>\n        <Logger name=\"org.springframework\"
    level=\"ERROR\" additivity=\"false\">\n            <AppenderRef ref=\"console\"
    />\n            <AppenderRef ref=\"file\" />\n        </Logger>\n        <!--
    \n        <Logger name=\"jdbc.sqlonly\" level=\"ERROR\" additivity=\"false\">\n
    \           <AppenderRef ref=\"console\" />\n            <AppenderRef ref=\"file\"
    />\n        </Logger>\n        --> \n        <Logger name=\"log4jdbc.log4j2\"
    level=\"ERROR\" additivity=\"false\">\n            <AppenderRef ref=\"console\"
    />\n            <AppenderRef ref=\"file\" />\n        </Logger>\n\n        <!--
    SQL Logger -->\n \n        <logger name=\"jdbc.sqltiming\" additivity=\"false\">\n
    \           <level value=\"debug\" />\n            <appender-ref ref=\"console\"
    />\n        </logger>\n\n        <logger name=\"jdbc.sqlonly\" additivity=\"false\">\n
    \           <level value=\"debug\" />\n            <appender-ref ref=\"console\"
    />\n        </logger>\n\n        <logger name=\"jdbc.audit\" additivity=\"false\">\n
    \           <level value=\"debug\" />\n            <appender-ref ref=\"console\"
    />\n        </logger>\n\n        <logger name=\"jdbc.resultset\" additivity=\"false\">\n
    \           <level value=\"debug\" />\n            <appender-ref ref=\"console\"
    />\n        </logger>\n \n        <logger name=\"jdbc.resultsettable\" additivity=\"false\">\n
    \           <level value=\"debug\" />\n            <appender-ref ref=\"console\"
    />\n        </logger>\n\n    </Loggers>\n</Configuration>"
kind: ConfigMap
metadata:
  name: lecapply-log4j2-xml
  namespace: op-pnu
---
apiVersion: v1
data:
  db.properties: database.connect=db
kind: ConfigMap
metadata:
  creationTimestamp: "2022-08-11T00:11:37Z"
  name: one-db-properties
  namespace: op-pnu
